Terminals unused in grammar

    INVALIDCHAR


Grammar

    0 $accept: program_all $end

    1 $@1: %empty

    2 program_all: procedures $@1 main

    3 $@2: %empty

    4 $@3: %empty

    5 procedures: procedures PROCEDURE proc_head IS VAR $@2 declarations $@3 _BEGIN commands END
    6           | procedures PROCEDURE proc_head IS _BEGIN commands END
    7           | %empty

    8 $@4: %empty

    9 $@5: %empty

   10 main: PROGRAM IS VAR $@4 declarations _BEGIN $@5 commands END
   11     | PROGRAM IS _BEGIN commands END

   12 commands: commands command
   13         | command

   14 command: identifier ASSIGN expression SEMICOLON

   15 $@6: %empty

   16 command: IF condition THEN commands $@6 ELSE commands ENDIF
   17        | IF condition THEN commands ENDIF
   18        | WHILE condition DO commands ENDWHILE

   19 $@7: %empty

   20 command: REPEAT $@7 commands UNTIL condition SEMICOLON
   21        | proc_head
   22        | READ identifier SEMICOLON
   23        | WRITE value SEMICOLON
   24        | expression

   25 $@8: %empty

   26 proc_head: PIDENTIFIER $@8 LBRACKET declarations RBRACKET

   27 declarations: declarations COMMA declaration
   28             | declaration
   29             | %empty

   30 declaration: PIDENTIFIER

   31 expression: value
   32           | value PLUS value
   33           | value MINUS value
   34           | value MUL value
   35           | value DIV value
   36           | value MODULO value

   37 condition: value EQ value
   38          | value NE value
   39          | value LT value
   40          | value GT value
   41          | value LE value
   42          | value GE value

   43 value: INT
   44      | identifier

   45 identifier: PIDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PROGRAM (258) 10 11
    IS (259) 5 6 10 11
    VAR (260) 5 10
    _BEGIN (261) 5 6 10 11
    END (262) 5 6 10 11
    LBRACKET (263) 26
    RBRACKET (264) 26
    READ (265) 22
    WRITE (266) 23
    IF <ifElse> (267) 16 17
    THEN (268) 16 17
    ELSE (269) 16
    ENDIF (270) 16 17
    WHILE (271) 18
    DO (272) 18
    ENDWHILE (273) 18
    ASSIGN (274) 14
    COMMA (275) 27
    REPEAT <num> (276) 20
    UNTIL (277) 20
    INVALIDCHAR (278)
    SEMICOLON (279) 14 20 22 23
    PROCEDURE (280) 5 6
    EQ (281) 37
    NE (282) 38
    LT (283) 39
    GT (284) 40
    LE (285) 41
    GE (286) 42
    PLUS (287) 32
    MINUS (288) 33
    MUL (289) 34
    DIV (290) 35
    MODULO (291) 36
    INT <num> (292) 43
    PIDENTIFIER <str> (293) 26 30 45


Nonterminals, with rules where they appear

    $accept (39)
        on left: 0
    program_all (40)
        on left: 2
        on right: 0
    $@1 (41)
        on left: 1
        on right: 2
    procedures <num> (42)
        on left: 5 6 7
        on right: 2 5 6
    $@2 (43)
        on left: 3
        on right: 5
    $@3 (44)
        on left: 4
        on right: 5
    main (45)
        on left: 10 11
        on right: 2
    $@4 (46)
        on left: 8
        on right: 10
    $@5 (47)
        on left: 9
        on right: 10
    commands (48)
        on left: 12 13
        on right: 5 6 10 11 12 16 17 18 20
    command (49)
        on left: 14 16 17 18 20 21 22 23 24
        on right: 12 13
    $@6 (50)
        on left: 15
        on right: 16
    $@7 (51)
        on left: 19
        on right: 20
    proc_head <procedureParam> (52)
        on left: 26
        on right: 5 6 21
    $@8 (53)
        on left: 25
        on right: 26
    declarations (54)
        on left: 27 28 29
        on right: 5 10 26 27
    declaration (55)
        on left: 30
        on right: 27 28
    expression <str> (56)
        on left: 31 32 33 34 35 36
        on right: 14 24
    condition <cond> (57)
        on left: 37 38 39 40 41 42
        on right: 16 17 18 20
    value <variable> (58)
        on left: 43 44
        on right: 23 31 32 33 34 35 36 37 38 39 40 41 42
    identifier <variable> (59)
        on left: 45
        on right: 14 22 44


State 0

    0 $accept: . program_all $end

    $default  reduce using rule 7 (procedures)

    program_all  go to state 1
    procedures   go to state 2


State 1

    0 $accept: program_all . $end

    $end  shift, and go to state 3


State 2

    2 program_all: procedures . $@1 main
    5 procedures: procedures . PROCEDURE proc_head IS VAR $@2 declarations $@3 _BEGIN commands END
    6           | procedures . PROCEDURE proc_head IS _BEGIN commands END

    PROCEDURE  shift, and go to state 4

    $default  reduce using rule 1 ($@1)

    $@1  go to state 5


State 3

    0 $accept: program_all $end .

    $default  accept


State 4

    5 procedures: procedures PROCEDURE . proc_head IS VAR $@2 declarations $@3 _BEGIN commands END
    6           | procedures PROCEDURE . proc_head IS _BEGIN commands END

    PIDENTIFIER  shift, and go to state 6

    proc_head  go to state 7


State 5

    2 program_all: procedures $@1 . main

    PROGRAM  shift, and go to state 8

    main  go to state 9


State 6

   26 proc_head: PIDENTIFIER . $@8 LBRACKET declarations RBRACKET

    $default  reduce using rule 25 ($@8)

    $@8  go to state 10


State 7

    5 procedures: procedures PROCEDURE proc_head . IS VAR $@2 declarations $@3 _BEGIN commands END
    6           | procedures PROCEDURE proc_head . IS _BEGIN commands END

    IS  shift, and go to state 11


State 8

   10 main: PROGRAM . IS VAR $@4 declarations _BEGIN $@5 commands END
   11     | PROGRAM . IS _BEGIN commands END

    IS  shift, and go to state 12


State 9

    2 program_all: procedures $@1 main .

    $default  reduce using rule 2 (program_all)


State 10

   26 proc_head: PIDENTIFIER $@8 . LBRACKET declarations RBRACKET

    LBRACKET  shift, and go to state 13


State 11

    5 procedures: procedures PROCEDURE proc_head IS . VAR $@2 declarations $@3 _BEGIN commands END
    6           | procedures PROCEDURE proc_head IS . _BEGIN commands END

    VAR     shift, and go to state 14
    _BEGIN  shift, and go to state 15


State 12

   10 main: PROGRAM IS . VAR $@4 declarations _BEGIN $@5 commands END
   11     | PROGRAM IS . _BEGIN commands END

    VAR     shift, and go to state 16
    _BEGIN  shift, and go to state 17


State 13

   26 proc_head: PIDENTIFIER $@8 LBRACKET . declarations RBRACKET

    PIDENTIFIER  shift, and go to state 18

    $default  reduce using rule 29 (declarations)

    declarations  go to state 19
    declaration   go to state 20


State 14

    5 procedures: procedures PROCEDURE proc_head IS VAR . $@2 declarations $@3 _BEGIN commands END

    $default  reduce using rule 3 ($@2)

    $@2  go to state 21


State 15

    6 procedures: procedures PROCEDURE proc_head IS _BEGIN . commands END

    READ         shift, and go to state 22
    WRITE        shift, and go to state 23
    IF           shift, and go to state 24
    WHILE        shift, and go to state 25
    REPEAT       shift, and go to state 26
    INT          shift, and go to state 27
    PIDENTIFIER  shift, and go to state 28

    commands    go to state 29
    command     go to state 30
    proc_head   go to state 31
    expression  go to state 32
    value       go to state 33
    identifier  go to state 34


State 16

   10 main: PROGRAM IS VAR . $@4 declarations _BEGIN $@5 commands END

    $default  reduce using rule 8 ($@4)

    $@4  go to state 35


State 17

   11 main: PROGRAM IS _BEGIN . commands END

    READ         shift, and go to state 22
    WRITE        shift, and go to state 23
    IF           shift, and go to state 24
    WHILE        shift, and go to state 25
    REPEAT       shift, and go to state 26
    INT          shift, and go to state 27
    PIDENTIFIER  shift, and go to state 28

    commands    go to state 36
    command     go to state 30
    proc_head   go to state 31
    expression  go to state 32
    value       go to state 33
    identifier  go to state 34


State 18

   30 declaration: PIDENTIFIER .

    $default  reduce using rule 30 (declaration)


State 19

   26 proc_head: PIDENTIFIER $@8 LBRACKET declarations . RBRACKET
   27 declarations: declarations . COMMA declaration

    RBRACKET  shift, and go to state 37
    COMMA     shift, and go to state 38


State 20

   28 declarations: declaration .

    $default  reduce using rule 28 (declarations)


State 21

    5 procedures: procedures PROCEDURE proc_head IS VAR $@2 . declarations $@3 _BEGIN commands END

    PIDENTIFIER  shift, and go to state 18

    $default  reduce using rule 29 (declarations)

    declarations  go to state 39
    declaration   go to state 20


State 22

   22 command: READ . identifier SEMICOLON

    PIDENTIFIER  shift, and go to state 40

    identifier  go to state 41


State 23

   23 command: WRITE . value SEMICOLON

    INT          shift, and go to state 27
    PIDENTIFIER  shift, and go to state 40

    value       go to state 42
    identifier  go to state 43


State 24

   16 command: IF . condition THEN commands $@6 ELSE commands ENDIF
   17        | IF . condition THEN commands ENDIF

    INT          shift, and go to state 27
    PIDENTIFIER  shift, and go to state 40

    condition   go to state 44
    value       go to state 45
    identifier  go to state 43


State 25

   18 command: WHILE . condition DO commands ENDWHILE

    INT          shift, and go to state 27
    PIDENTIFIER  shift, and go to state 40

    condition   go to state 46
    value       go to state 45
    identifier  go to state 43


State 26

   20 command: REPEAT . $@7 commands UNTIL condition SEMICOLON

    $default  reduce using rule 19 ($@7)

    $@7  go to state 47


State 27

   43 value: INT .

    $default  reduce using rule 43 (value)


State 28

   26 proc_head: PIDENTIFIER . $@8 LBRACKET declarations RBRACKET
   45 identifier: PIDENTIFIER .

    LBRACKET  reduce using rule 25 ($@8)
    $default  reduce using rule 45 (identifier)

    $@8  go to state 10


State 29

    6 procedures: procedures PROCEDURE proc_head IS _BEGIN commands . END
   12 commands: commands . command

    END          shift, and go to state 48
    READ         shift, and go to state 22
    WRITE        shift, and go to state 23
    IF           shift, and go to state 24
    WHILE        shift, and go to state 25
    REPEAT       shift, and go to state 26
    INT          shift, and go to state 27
    PIDENTIFIER  shift, and go to state 28

    command     go to state 49
    proc_head   go to state 31
    expression  go to state 32
    value       go to state 33
    identifier  go to state 34


State 30

   13 commands: command .

    $default  reduce using rule 13 (commands)


State 31

   21 command: proc_head .

    $default  reduce using rule 21 (command)


State 32

   24 command: expression .

    $default  reduce using rule 24 (command)


State 33

   31 expression: value .
   32           | value . PLUS value
   33           | value . MINUS value
   34           | value . MUL value
   35           | value . DIV value
   36           | value . MODULO value

    PLUS    shift, and go to state 50
    MINUS   shift, and go to state 51
    MUL     shift, and go to state 52
    DIV     shift, and go to state 53
    MODULO  shift, and go to state 54

    $default  reduce using rule 31 (expression)


State 34

   14 command: identifier . ASSIGN expression SEMICOLON
   44 value: identifier .

    ASSIGN  shift, and go to state 55

    $default  reduce using rule 44 (value)


State 35

   10 main: PROGRAM IS VAR $@4 . declarations _BEGIN $@5 commands END

    PIDENTIFIER  shift, and go to state 18

    $default  reduce using rule 29 (declarations)

    declarations  go to state 56
    declaration   go to state 20


State 36

   11 main: PROGRAM IS _BEGIN commands . END
   12 commands: commands . command

    END          shift, and go to state 57
    READ         shift, and go to state 22
    WRITE        shift, and go to state 23
    IF           shift, and go to state 24
    WHILE        shift, and go to state 25
    REPEAT       shift, and go to state 26
    INT          shift, and go to state 27
    PIDENTIFIER  shift, and go to state 28

    command     go to state 49
    proc_head   go to state 31
    expression  go to state 32
    value       go to state 33
    identifier  go to state 34


State 37

   26 proc_head: PIDENTIFIER $@8 LBRACKET declarations RBRACKET .

    $default  reduce using rule 26 (proc_head)


State 38

   27 declarations: declarations COMMA . declaration

    PIDENTIFIER  shift, and go to state 18

    declaration  go to state 58


State 39

    5 procedures: procedures PROCEDURE proc_head IS VAR $@2 declarations . $@3 _BEGIN commands END
   27 declarations: declarations . COMMA declaration

    COMMA  shift, and go to state 38

    $default  reduce using rule 4 ($@3)

    $@3  go to state 59


State 40

   45 identifier: PIDENTIFIER .

    $default  reduce using rule 45 (identifier)


State 41

   22 command: READ identifier . SEMICOLON

    SEMICOLON  shift, and go to state 60


State 42

   23 command: WRITE value . SEMICOLON

    SEMICOLON  shift, and go to state 61


State 43

   44 value: identifier .

    $default  reduce using rule 44 (value)


State 44

   16 command: IF condition . THEN commands $@6 ELSE commands ENDIF
   17        | IF condition . THEN commands ENDIF

    THEN  shift, and go to state 62


State 45

   37 condition: value . EQ value
   38          | value . NE value
   39          | value . LT value
   40          | value . GT value
   41          | value . LE value
   42          | value . GE value

    EQ  shift, and go to state 63
    NE  shift, and go to state 64
    LT  shift, and go to state 65
    GT  shift, and go to state 66
    LE  shift, and go to state 67
    GE  shift, and go to state 68


State 46

   18 command: WHILE condition . DO commands ENDWHILE

    DO  shift, and go to state 69


State 47

   20 command: REPEAT $@7 . commands UNTIL condition SEMICOLON

    READ         shift, and go to state 22
    WRITE        shift, and go to state 23
    IF           shift, and go to state 24
    WHILE        shift, and go to state 25
    REPEAT       shift, and go to state 26
    INT          shift, and go to state 27
    PIDENTIFIER  shift, and go to state 28

    commands    go to state 70
    command     go to state 30
    proc_head   go to state 31
    expression  go to state 32
    value       go to state 33
    identifier  go to state 34


State 48

    6 procedures: procedures PROCEDURE proc_head IS _BEGIN commands END .

    $default  reduce using rule 6 (procedures)


State 49

   12 commands: commands command .

    $default  reduce using rule 12 (commands)


State 50

   32 expression: value PLUS . value

    INT          shift, and go to state 27
    PIDENTIFIER  shift, and go to state 40

    value       go to state 71
    identifier  go to state 43


State 51

   33 expression: value MINUS . value

    INT          shift, and go to state 27
    PIDENTIFIER  shift, and go to state 40

    value       go to state 72
    identifier  go to state 43


State 52

   34 expression: value MUL . value

    INT          shift, and go to state 27
    PIDENTIFIER  shift, and go to state 40

    value       go to state 73
    identifier  go to state 43


State 53

   35 expression: value DIV . value

    INT          shift, and go to state 27
    PIDENTIFIER  shift, and go to state 40

    value       go to state 74
    identifier  go to state 43


State 54

   36 expression: value MODULO . value

    INT          shift, and go to state 27
    PIDENTIFIER  shift, and go to state 40

    value       go to state 75
    identifier  go to state 43


State 55

   14 command: identifier ASSIGN . expression SEMICOLON

    INT          shift, and go to state 27
    PIDENTIFIER  shift, and go to state 40

    expression  go to state 76
    value       go to state 33
    identifier  go to state 43


State 56

   10 main: PROGRAM IS VAR $@4 declarations . _BEGIN $@5 commands END
   27 declarations: declarations . COMMA declaration

    _BEGIN  shift, and go to state 77
    COMMA   shift, and go to state 38


State 57

   11 main: PROGRAM IS _BEGIN commands END .

    $default  reduce using rule 11 (main)


State 58

   27 declarations: declarations COMMA declaration .

    $default  reduce using rule 27 (declarations)


State 59

    5 procedures: procedures PROCEDURE proc_head IS VAR $@2 declarations $@3 . _BEGIN commands END

    _BEGIN  shift, and go to state 78


State 60

   22 command: READ identifier SEMICOLON .

    $default  reduce using rule 22 (command)


State 61

   23 command: WRITE value SEMICOLON .

    $default  reduce using rule 23 (command)


State 62

   16 command: IF condition THEN . commands $@6 ELSE commands ENDIF
   17        | IF condition THEN . commands ENDIF

    READ         shift, and go to state 22
    WRITE        shift, and go to state 23
    IF           shift, and go to state 24
    WHILE        shift, and go to state 25
    REPEAT       shift, and go to state 26
    INT          shift, and go to state 27
    PIDENTIFIER  shift, and go to state 28

    commands    go to state 79
    command     go to state 30
    proc_head   go to state 31
    expression  go to state 32
    value       go to state 33
    identifier  go to state 34


State 63

   37 condition: value EQ . value

    INT          shift, and go to state 27
    PIDENTIFIER  shift, and go to state 40

    value       go to state 80
    identifier  go to state 43


State 64

   38 condition: value NE . value

    INT          shift, and go to state 27
    PIDENTIFIER  shift, and go to state 40

    value       go to state 81
    identifier  go to state 43


State 65

   39 condition: value LT . value

    INT          shift, and go to state 27
    PIDENTIFIER  shift, and go to state 40

    value       go to state 82
    identifier  go to state 43


State 66

   40 condition: value GT . value

    INT          shift, and go to state 27
    PIDENTIFIER  shift, and go to state 40

    value       go to state 83
    identifier  go to state 43


State 67

   41 condition: value LE . value

    INT          shift, and go to state 27
    PIDENTIFIER  shift, and go to state 40

    value       go to state 84
    identifier  go to state 43


State 68

   42 condition: value GE . value

    INT          shift, and go to state 27
    PIDENTIFIER  shift, and go to state 40

    value       go to state 85
    identifier  go to state 43


State 69

   18 command: WHILE condition DO . commands ENDWHILE

    READ         shift, and go to state 22
    WRITE        shift, and go to state 23
    IF           shift, and go to state 24
    WHILE        shift, and go to state 25
    REPEAT       shift, and go to state 26
    INT          shift, and go to state 27
    PIDENTIFIER  shift, and go to state 28

    commands    go to state 86
    command     go to state 30
    proc_head   go to state 31
    expression  go to state 32
    value       go to state 33
    identifier  go to state 34


State 70

   12 commands: commands . command
   20 command: REPEAT $@7 commands . UNTIL condition SEMICOLON

    READ         shift, and go to state 22
    WRITE        shift, and go to state 23
    IF           shift, and go to state 24
    WHILE        shift, and go to state 25
    REPEAT       shift, and go to state 26
    UNTIL        shift, and go to state 87
    INT          shift, and go to state 27
    PIDENTIFIER  shift, and go to state 28

    command     go to state 49
    proc_head   go to state 31
    expression  go to state 32
    value       go to state 33
    identifier  go to state 34


State 71

   32 expression: value PLUS value .

    $default  reduce using rule 32 (expression)


State 72

   33 expression: value MINUS value .

    $default  reduce using rule 33 (expression)


State 73

   34 expression: value MUL value .

    $default  reduce using rule 34 (expression)


State 74

   35 expression: value DIV value .

    $default  reduce using rule 35 (expression)


State 75

   36 expression: value MODULO value .

    $default  reduce using rule 36 (expression)


State 76

   14 command: identifier ASSIGN expression . SEMICOLON

    SEMICOLON  shift, and go to state 88


State 77

   10 main: PROGRAM IS VAR $@4 declarations _BEGIN . $@5 commands END

    $default  reduce using rule 9 ($@5)

    $@5  go to state 89


State 78

    5 procedures: procedures PROCEDURE proc_head IS VAR $@2 declarations $@3 _BEGIN . commands END

    READ         shift, and go to state 22
    WRITE        shift, and go to state 23
    IF           shift, and go to state 24
    WHILE        shift, and go to state 25
    REPEAT       shift, and go to state 26
    INT          shift, and go to state 27
    PIDENTIFIER  shift, and go to state 28

    commands    go to state 90
    command     go to state 30
    proc_head   go to state 31
    expression  go to state 32
    value       go to state 33
    identifier  go to state 34


State 79

   12 commands: commands . command
   16 command: IF condition THEN commands . $@6 ELSE commands ENDIF
   17        | IF condition THEN commands . ENDIF

    READ         shift, and go to state 22
    WRITE        shift, and go to state 23
    IF           shift, and go to state 24
    ENDIF        shift, and go to state 91
    WHILE        shift, and go to state 25
    REPEAT       shift, and go to state 26
    INT          shift, and go to state 27
    PIDENTIFIER  shift, and go to state 28

    $default  reduce using rule 15 ($@6)

    command     go to state 49
    $@6         go to state 92
    proc_head   go to state 31
    expression  go to state 32
    value       go to state 33
    identifier  go to state 34


State 80

   37 condition: value EQ value .

    $default  reduce using rule 37 (condition)


State 81

   38 condition: value NE value .

    $default  reduce using rule 38 (condition)


State 82

   39 condition: value LT value .

    $default  reduce using rule 39 (condition)


State 83

   40 condition: value GT value .

    $default  reduce using rule 40 (condition)


State 84

   41 condition: value LE value .

    $default  reduce using rule 41 (condition)


State 85

   42 condition: value GE value .

    $default  reduce using rule 42 (condition)


State 86

   12 commands: commands . command
   18 command: WHILE condition DO commands . ENDWHILE

    READ         shift, and go to state 22
    WRITE        shift, and go to state 23
    IF           shift, and go to state 24
    WHILE        shift, and go to state 25
    ENDWHILE     shift, and go to state 93
    REPEAT       shift, and go to state 26
    INT          shift, and go to state 27
    PIDENTIFIER  shift, and go to state 28

    command     go to state 49
    proc_head   go to state 31
    expression  go to state 32
    value       go to state 33
    identifier  go to state 34


State 87

   20 command: REPEAT $@7 commands UNTIL . condition SEMICOLON

    INT          shift, and go to state 27
    PIDENTIFIER  shift, and go to state 40

    condition   go to state 94
    value       go to state 45
    identifier  go to state 43


State 88

   14 command: identifier ASSIGN expression SEMICOLON .

    $default  reduce using rule 14 (command)


State 89

   10 main: PROGRAM IS VAR $@4 declarations _BEGIN $@5 . commands END

    READ         shift, and go to state 22
    WRITE        shift, and go to state 23
    IF           shift, and go to state 24
    WHILE        shift, and go to state 25
    REPEAT       shift, and go to state 26
    INT          shift, and go to state 27
    PIDENTIFIER  shift, and go to state 28

    commands    go to state 95
    command     go to state 30
    proc_head   go to state 31
    expression  go to state 32
    value       go to state 33
    identifier  go to state 34


State 90

    5 procedures: procedures PROCEDURE proc_head IS VAR $@2 declarations $@3 _BEGIN commands . END
   12 commands: commands . command

    END          shift, and go to state 96
    READ         shift, and go to state 22
    WRITE        shift, and go to state 23
    IF           shift, and go to state 24
    WHILE        shift, and go to state 25
    REPEAT       shift, and go to state 26
    INT          shift, and go to state 27
    PIDENTIFIER  shift, and go to state 28

    command     go to state 49
    proc_head   go to state 31
    expression  go to state 32
    value       go to state 33
    identifier  go to state 34


State 91

   17 command: IF condition THEN commands ENDIF .

    $default  reduce using rule 17 (command)


State 92

   16 command: IF condition THEN commands $@6 . ELSE commands ENDIF

    ELSE  shift, and go to state 97


State 93

   18 command: WHILE condition DO commands ENDWHILE .

    $default  reduce using rule 18 (command)


State 94

   20 command: REPEAT $@7 commands UNTIL condition . SEMICOLON

    SEMICOLON  shift, and go to state 98


State 95

   10 main: PROGRAM IS VAR $@4 declarations _BEGIN $@5 commands . END
   12 commands: commands . command

    END          shift, and go to state 99
    READ         shift, and go to state 22
    WRITE        shift, and go to state 23
    IF           shift, and go to state 24
    WHILE        shift, and go to state 25
    REPEAT       shift, and go to state 26
    INT          shift, and go to state 27
    PIDENTIFIER  shift, and go to state 28

    command     go to state 49
    proc_head   go to state 31
    expression  go to state 32
    value       go to state 33
    identifier  go to state 34


State 96

    5 procedures: procedures PROCEDURE proc_head IS VAR $@2 declarations $@3 _BEGIN commands END .

    $default  reduce using rule 5 (procedures)


State 97

   16 command: IF condition THEN commands $@6 ELSE . commands ENDIF

    READ         shift, and go to state 22
    WRITE        shift, and go to state 23
    IF           shift, and go to state 24
    WHILE        shift, and go to state 25
    REPEAT       shift, and go to state 26
    INT          shift, and go to state 27
    PIDENTIFIER  shift, and go to state 28

    commands    go to state 100
    command     go to state 30
    proc_head   go to state 31
    expression  go to state 32
    value       go to state 33
    identifier  go to state 34


State 98

   20 command: REPEAT $@7 commands UNTIL condition SEMICOLON .

    $default  reduce using rule 20 (command)


State 99

   10 main: PROGRAM IS VAR $@4 declarations _BEGIN $@5 commands END .

    $default  reduce using rule 10 (main)


State 100

   12 commands: commands . command
   16 command: IF condition THEN commands $@6 ELSE commands . ENDIF

    READ         shift, and go to state 22
    WRITE        shift, and go to state 23
    IF           shift, and go to state 24
    ENDIF        shift, and go to state 101
    WHILE        shift, and go to state 25
    REPEAT       shift, and go to state 26
    INT          shift, and go to state 27
    PIDENTIFIER  shift, and go to state 28

    command     go to state 49
    proc_head   go to state 31
    expression  go to state 32
    value       go to state 33
    identifier  go to state 34


State 101

   16 command: IF condition THEN commands $@6 ELSE commands ENDIF .

    $default  reduce using rule 16 (command)
