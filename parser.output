Nonterminals useless in grammar

    proc_head


Terminals unused in grammar

    INVALIDCHAR


Rules useless in grammar

   35 proc_head: PIDENTIFIER declarations


Grammar

    0 $accept: program_all $end

    1 program_all: procedures main

    2 procedures: %empty

    3 main: PROGRAM IS VAR declarations _BEGIN commands END
    4     | PROGRAM IS _BEGIN commands END

    5 commands: commands command
    6         | command

    7 command: identifier ASSIGN expression SEMICOLON

    8 $@1: %empty

    9 command: IF condition THEN commands $@1 ELSE commands ENDIF
   10        | IF condition THEN commands ENDIF
   11        | WHILE condition DO commands ENDWHILE

   12 $@2: %empty

   13 command: REPEAT $@2 commands UNTIL condition SEMICOLON
   14        | READ identifier SEMICOLON
   15        | WRITE value SEMICOLON
   16        | expression

   17 declarations: declarations COMMA declaration
   18             | declaration

   19 declaration: PIDENTIFIER

   20 expression: value
   21           | value PLUS value
   22           | value MINUS value
   23           | value MUL value
   24           | value DIV value
   25           | value MODULO value

   26 condition: value EQ value
   27          | value NE value
   28          | value LT value
   29          | value GT value
   30          | value LE value
   31          | value GE value

   32 value: INT
   33      | identifier

   34 identifier: PIDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PROGRAM (258) 3 4
    IS (259) 3 4
    VAR (260) 3
    _BEGIN (261) 3 4
    END (262) 3 4
    READ (263) 14
    WRITE (264) 15
    IF <ifElse> (265) 9 10
    THEN (266) 9 10
    ELSE (267) 9
    ENDIF (268) 9 10
    WHILE (269) 11
    DO (270) 11
    ENDWHILE (271) 11
    ASSIGN (272) 7
    COMMA (273) 17
    REPEAT <num> (274) 13
    UNTIL (275) 13
    INVALIDCHAR (276)
    SEMICOLON (277) 7 13 14 15
    EQ (278) 26
    NE (279) 27
    LT (280) 28
    GT (281) 29
    LE (282) 30
    GE (283) 31
    PLUS (284) 21
    MINUS (285) 22
    MUL (286) 23
    DIV (287) 24
    MODULO (288) 25
    INT <num> (289) 32
    PIDENTIFIER <str> (290) 19 34


Nonterminals, with rules where they appear

    $accept (36)
        on left: 0
    program_all (37)
        on left: 1
        on right: 0
    procedures (38)
        on left: 2
        on right: 1
    main (39)
        on left: 3 4
        on right: 1
    commands (40)
        on left: 5 6
        on right: 3 4 5 9 10 11 13
    command (41)
        on left: 7 9 10 11 13 14 15 16
        on right: 5 6
    $@1 (42)
        on left: 8
        on right: 9
    $@2 (43)
        on left: 12
        on right: 13
    declarations (44)
        on left: 17 18
        on right: 3 17
    declaration (45)
        on left: 19
        on right: 17 18
    expression <str> (46)
        on left: 20 21 22 23 24 25
        on right: 7 16
    condition <cond> (47)
        on left: 26 27 28 29 30 31
        on right: 9 10 11 13
    value <variable> (48)
        on left: 32 33
        on right: 15 20 21 22 23 24 25 26 27 28 29 30 31
    identifier <variable> (49)
        on left: 34
        on right: 7 14 33


State 0

    0 $accept: . program_all $end

    $default  reduce using rule 2 (procedures)

    program_all  go to state 1
    procedures   go to state 2


State 1

    0 $accept: program_all . $end

    $end  shift, and go to state 3


State 2

    1 program_all: procedures . main

    PROGRAM  shift, and go to state 4

    main  go to state 5


State 3

    0 $accept: program_all $end .

    $default  accept


State 4

    3 main: PROGRAM . IS VAR declarations _BEGIN commands END
    4     | PROGRAM . IS _BEGIN commands END

    IS  shift, and go to state 6


State 5

    1 program_all: procedures main .

    $default  reduce using rule 1 (program_all)


State 6

    3 main: PROGRAM IS . VAR declarations _BEGIN commands END
    4     | PROGRAM IS . _BEGIN commands END

    VAR     shift, and go to state 7
    _BEGIN  shift, and go to state 8


State 7

    3 main: PROGRAM IS VAR . declarations _BEGIN commands END

    PIDENTIFIER  shift, and go to state 9

    declarations  go to state 10
    declaration   go to state 11


State 8

    4 main: PROGRAM IS _BEGIN . commands END

    READ         shift, and go to state 12
    WRITE        shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    REPEAT       shift, and go to state 16
    INT          shift, and go to state 17
    PIDENTIFIER  shift, and go to state 18

    commands    go to state 19
    command     go to state 20
    expression  go to state 21
    value       go to state 22
    identifier  go to state 23


State 9

   19 declaration: PIDENTIFIER .

    $default  reduce using rule 19 (declaration)


State 10

    3 main: PROGRAM IS VAR declarations . _BEGIN commands END
   17 declarations: declarations . COMMA declaration

    _BEGIN  shift, and go to state 24
    COMMA   shift, and go to state 25


State 11

   18 declarations: declaration .

    $default  reduce using rule 18 (declarations)


State 12

   14 command: READ . identifier SEMICOLON

    PIDENTIFIER  shift, and go to state 18

    identifier  go to state 26


State 13

   15 command: WRITE . value SEMICOLON

    INT          shift, and go to state 17
    PIDENTIFIER  shift, and go to state 18

    value       go to state 27
    identifier  go to state 28


State 14

    9 command: IF . condition THEN commands $@1 ELSE commands ENDIF
   10        | IF . condition THEN commands ENDIF

    INT          shift, and go to state 17
    PIDENTIFIER  shift, and go to state 18

    condition   go to state 29
    value       go to state 30
    identifier  go to state 28


State 15

   11 command: WHILE . condition DO commands ENDWHILE

    INT          shift, and go to state 17
    PIDENTIFIER  shift, and go to state 18

    condition   go to state 31
    value       go to state 30
    identifier  go to state 28


State 16

   13 command: REPEAT . $@2 commands UNTIL condition SEMICOLON

    $default  reduce using rule 12 ($@2)

    $@2  go to state 32


State 17

   32 value: INT .

    $default  reduce using rule 32 (value)


State 18

   34 identifier: PIDENTIFIER .

    $default  reduce using rule 34 (identifier)


State 19

    4 main: PROGRAM IS _BEGIN commands . END
    5 commands: commands . command

    END          shift, and go to state 33
    READ         shift, and go to state 12
    WRITE        shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    REPEAT       shift, and go to state 16
    INT          shift, and go to state 17
    PIDENTIFIER  shift, and go to state 18

    command     go to state 34
    expression  go to state 21
    value       go to state 22
    identifier  go to state 23


State 20

    6 commands: command .

    $default  reduce using rule 6 (commands)


State 21

   16 command: expression .

    $default  reduce using rule 16 (command)


State 22

   20 expression: value .
   21           | value . PLUS value
   22           | value . MINUS value
   23           | value . MUL value
   24           | value . DIV value
   25           | value . MODULO value

    PLUS    shift, and go to state 35
    MINUS   shift, and go to state 36
    MUL     shift, and go to state 37
    DIV     shift, and go to state 38
    MODULO  shift, and go to state 39

    $default  reduce using rule 20 (expression)


State 23

    7 command: identifier . ASSIGN expression SEMICOLON
   33 value: identifier .

    ASSIGN  shift, and go to state 40

    $default  reduce using rule 33 (value)


State 24

    3 main: PROGRAM IS VAR declarations _BEGIN . commands END

    READ         shift, and go to state 12
    WRITE        shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    REPEAT       shift, and go to state 16
    INT          shift, and go to state 17
    PIDENTIFIER  shift, and go to state 18

    commands    go to state 41
    command     go to state 20
    expression  go to state 21
    value       go to state 22
    identifier  go to state 23


State 25

   17 declarations: declarations COMMA . declaration

    PIDENTIFIER  shift, and go to state 9

    declaration  go to state 42


State 26

   14 command: READ identifier . SEMICOLON

    SEMICOLON  shift, and go to state 43


State 27

   15 command: WRITE value . SEMICOLON

    SEMICOLON  shift, and go to state 44


State 28

   33 value: identifier .

    $default  reduce using rule 33 (value)


State 29

    9 command: IF condition . THEN commands $@1 ELSE commands ENDIF
   10        | IF condition . THEN commands ENDIF

    THEN  shift, and go to state 45


State 30

   26 condition: value . EQ value
   27          | value . NE value
   28          | value . LT value
   29          | value . GT value
   30          | value . LE value
   31          | value . GE value

    EQ  shift, and go to state 46
    NE  shift, and go to state 47
    LT  shift, and go to state 48
    GT  shift, and go to state 49
    LE  shift, and go to state 50
    GE  shift, and go to state 51


State 31

   11 command: WHILE condition . DO commands ENDWHILE

    DO  shift, and go to state 52


State 32

   13 command: REPEAT $@2 . commands UNTIL condition SEMICOLON

    READ         shift, and go to state 12
    WRITE        shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    REPEAT       shift, and go to state 16
    INT          shift, and go to state 17
    PIDENTIFIER  shift, and go to state 18

    commands    go to state 53
    command     go to state 20
    expression  go to state 21
    value       go to state 22
    identifier  go to state 23


State 33

    4 main: PROGRAM IS _BEGIN commands END .

    $default  reduce using rule 4 (main)


State 34

    5 commands: commands command .

    $default  reduce using rule 5 (commands)


State 35

   21 expression: value PLUS . value

    INT          shift, and go to state 17
    PIDENTIFIER  shift, and go to state 18

    value       go to state 54
    identifier  go to state 28


State 36

   22 expression: value MINUS . value

    INT          shift, and go to state 17
    PIDENTIFIER  shift, and go to state 18

    value       go to state 55
    identifier  go to state 28


State 37

   23 expression: value MUL . value

    INT          shift, and go to state 17
    PIDENTIFIER  shift, and go to state 18

    value       go to state 56
    identifier  go to state 28


State 38

   24 expression: value DIV . value

    INT          shift, and go to state 17
    PIDENTIFIER  shift, and go to state 18

    value       go to state 57
    identifier  go to state 28


State 39

   25 expression: value MODULO . value

    INT          shift, and go to state 17
    PIDENTIFIER  shift, and go to state 18

    value       go to state 58
    identifier  go to state 28


State 40

    7 command: identifier ASSIGN . expression SEMICOLON

    INT          shift, and go to state 17
    PIDENTIFIER  shift, and go to state 18

    expression  go to state 59
    value       go to state 22
    identifier  go to state 28


State 41

    3 main: PROGRAM IS VAR declarations _BEGIN commands . END
    5 commands: commands . command

    END          shift, and go to state 60
    READ         shift, and go to state 12
    WRITE        shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    REPEAT       shift, and go to state 16
    INT          shift, and go to state 17
    PIDENTIFIER  shift, and go to state 18

    command     go to state 34
    expression  go to state 21
    value       go to state 22
    identifier  go to state 23


State 42

   17 declarations: declarations COMMA declaration .

    $default  reduce using rule 17 (declarations)


State 43

   14 command: READ identifier SEMICOLON .

    $default  reduce using rule 14 (command)


State 44

   15 command: WRITE value SEMICOLON .

    $default  reduce using rule 15 (command)


State 45

    9 command: IF condition THEN . commands $@1 ELSE commands ENDIF
   10        | IF condition THEN . commands ENDIF

    READ         shift, and go to state 12
    WRITE        shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    REPEAT       shift, and go to state 16
    INT          shift, and go to state 17
    PIDENTIFIER  shift, and go to state 18

    commands    go to state 61
    command     go to state 20
    expression  go to state 21
    value       go to state 22
    identifier  go to state 23


State 46

   26 condition: value EQ . value

    INT          shift, and go to state 17
    PIDENTIFIER  shift, and go to state 18

    value       go to state 62
    identifier  go to state 28


State 47

   27 condition: value NE . value

    INT          shift, and go to state 17
    PIDENTIFIER  shift, and go to state 18

    value       go to state 63
    identifier  go to state 28


State 48

   28 condition: value LT . value

    INT          shift, and go to state 17
    PIDENTIFIER  shift, and go to state 18

    value       go to state 64
    identifier  go to state 28


State 49

   29 condition: value GT . value

    INT          shift, and go to state 17
    PIDENTIFIER  shift, and go to state 18

    value       go to state 65
    identifier  go to state 28


State 50

   30 condition: value LE . value

    INT          shift, and go to state 17
    PIDENTIFIER  shift, and go to state 18

    value       go to state 66
    identifier  go to state 28


State 51

   31 condition: value GE . value

    INT          shift, and go to state 17
    PIDENTIFIER  shift, and go to state 18

    value       go to state 67
    identifier  go to state 28


State 52

   11 command: WHILE condition DO . commands ENDWHILE

    READ         shift, and go to state 12
    WRITE        shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    REPEAT       shift, and go to state 16
    INT          shift, and go to state 17
    PIDENTIFIER  shift, and go to state 18

    commands    go to state 68
    command     go to state 20
    expression  go to state 21
    value       go to state 22
    identifier  go to state 23


State 53

    5 commands: commands . command
   13 command: REPEAT $@2 commands . UNTIL condition SEMICOLON

    READ         shift, and go to state 12
    WRITE        shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    REPEAT       shift, and go to state 16
    UNTIL        shift, and go to state 69
    INT          shift, and go to state 17
    PIDENTIFIER  shift, and go to state 18

    command     go to state 34
    expression  go to state 21
    value       go to state 22
    identifier  go to state 23


State 54

   21 expression: value PLUS value .

    $default  reduce using rule 21 (expression)


State 55

   22 expression: value MINUS value .

    $default  reduce using rule 22 (expression)


State 56

   23 expression: value MUL value .

    $default  reduce using rule 23 (expression)


State 57

   24 expression: value DIV value .

    $default  reduce using rule 24 (expression)


State 58

   25 expression: value MODULO value .

    $default  reduce using rule 25 (expression)


State 59

    7 command: identifier ASSIGN expression . SEMICOLON

    SEMICOLON  shift, and go to state 70


State 60

    3 main: PROGRAM IS VAR declarations _BEGIN commands END .

    $default  reduce using rule 3 (main)


State 61

    5 commands: commands . command
    9 command: IF condition THEN commands . $@1 ELSE commands ENDIF
   10        | IF condition THEN commands . ENDIF

    READ         shift, and go to state 12
    WRITE        shift, and go to state 13
    IF           shift, and go to state 14
    ENDIF        shift, and go to state 71
    WHILE        shift, and go to state 15
    REPEAT       shift, and go to state 16
    INT          shift, and go to state 17
    PIDENTIFIER  shift, and go to state 18

    $default  reduce using rule 8 ($@1)

    command     go to state 34
    $@1         go to state 72
    expression  go to state 21
    value       go to state 22
    identifier  go to state 23


State 62

   26 condition: value EQ value .

    $default  reduce using rule 26 (condition)


State 63

   27 condition: value NE value .

    $default  reduce using rule 27 (condition)


State 64

   28 condition: value LT value .

    $default  reduce using rule 28 (condition)


State 65

   29 condition: value GT value .

    $default  reduce using rule 29 (condition)


State 66

   30 condition: value LE value .

    $default  reduce using rule 30 (condition)


State 67

   31 condition: value GE value .

    $default  reduce using rule 31 (condition)


State 68

    5 commands: commands . command
   11 command: WHILE condition DO commands . ENDWHILE

    READ         shift, and go to state 12
    WRITE        shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    ENDWHILE     shift, and go to state 73
    REPEAT       shift, and go to state 16
    INT          shift, and go to state 17
    PIDENTIFIER  shift, and go to state 18

    command     go to state 34
    expression  go to state 21
    value       go to state 22
    identifier  go to state 23


State 69

   13 command: REPEAT $@2 commands UNTIL . condition SEMICOLON

    INT          shift, and go to state 17
    PIDENTIFIER  shift, and go to state 18

    condition   go to state 74
    value       go to state 30
    identifier  go to state 28


State 70

    7 command: identifier ASSIGN expression SEMICOLON .

    $default  reduce using rule 7 (command)


State 71

   10 command: IF condition THEN commands ENDIF .

    $default  reduce using rule 10 (command)


State 72

    9 command: IF condition THEN commands $@1 . ELSE commands ENDIF

    ELSE  shift, and go to state 75


State 73

   11 command: WHILE condition DO commands ENDWHILE .

    $default  reduce using rule 11 (command)


State 74

   13 command: REPEAT $@2 commands UNTIL condition . SEMICOLON

    SEMICOLON  shift, and go to state 76


State 75

    9 command: IF condition THEN commands $@1 ELSE . commands ENDIF

    READ         shift, and go to state 12
    WRITE        shift, and go to state 13
    IF           shift, and go to state 14
    WHILE        shift, and go to state 15
    REPEAT       shift, and go to state 16
    INT          shift, and go to state 17
    PIDENTIFIER  shift, and go to state 18

    commands    go to state 77
    command     go to state 20
    expression  go to state 21
    value       go to state 22
    identifier  go to state 23


State 76

   13 command: REPEAT $@2 commands UNTIL condition SEMICOLON .

    $default  reduce using rule 13 (command)


State 77

    5 commands: commands . command
    9 command: IF condition THEN commands $@1 ELSE commands . ENDIF

    READ         shift, and go to state 12
    WRITE        shift, and go to state 13
    IF           shift, and go to state 14
    ENDIF        shift, and go to state 78
    WHILE        shift, and go to state 15
    REPEAT       shift, and go to state 16
    INT          shift, and go to state 17
    PIDENTIFIER  shift, and go to state 18

    command     go to state 34
    expression  go to state 21
    value       go to state 22
    identifier  go to state 23


State 78

    9 command: IF condition THEN commands $@1 ELSE commands ENDIF .

    $default  reduce using rule 9 (command)
